from termcolor import colored
import tkinter as tk
from PIL import Image, ImageTk
import os
import time
import requests
from packaging import version
import webbrowser

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è GitHub
REPO_OWNER = "matvey606x"
REPO_NAME = "fake_launcher"
GITHUB_TOKEN = "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"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω
CURRENT_VERSION = "1.1"

def check_for_updates():
    try:
        url = f"https://api.github.com/repos/{REPO_OWNER}/{REPO_NAME}/releases/latest"
        headers = {
            "Authorization": f"token {GITHUB_TOKEN}",
            "Accept": "application/vnd.github.v3+json"
        }
        
        response = requests.get(url, headers=headers)
        response.raise_for_status()
        
        latest_release = response.json()
        latest_version = latest_release["tag_name"].lstrip('v')
        
        if version.parse(latest_version) > version.parse(CURRENT_VERSION):
            print(colored(f"üîî –î–æ—Å—Ç—É–ø–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {latest_version}", "green"))
            print(colored(f"–û–ø–∏—Å–∞–Ω–∏–µ: {latest_release.get('body', '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è')}", "yellow"))
            return latest_release["html_url"]
        else:
            print(colored("‚úÖ –£ –≤–∞—Å –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –ª–∞—É–Ω—á–µ—Ä–∞!", "blue"))
            return None
            
    except requests.exceptions.RequestException as e:
        print(colored(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {e}", "red"))
        return None

print(colored("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Grand Theft Auto VI Launcher", "blue", attrs=["bold"]))
print(colored("–í–≤–µ–¥–∏—Ç–µ play —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å. help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–º–∞–Ω–¥", attrs=["bold"]))

while True:
    a = str(input("> ")).strip().lower()
    
    if a == "play":
        os.system("sound.mp3")
        time.sleep(2)
        
        
        root = tk.Tk()
        root.attributes('-fullscreen', True)  
        image = Image.open("image.jpg")  
        photo = ImageTk.PhotoImage(image)
        label = tk.Label(root, image=photo)
        label.pack(expand=True, fill="both")
        root.mainloop()
        
    elif a == "help":
        print(colored("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:", "yellow"))
        print("version - –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –≤–µ—Ä—Å–∏—é –ª–∞—É–Ω—á–µ—Ä–∞")
        print("play - –ò–≥—Ä–∞—Ç—å")
        print("update - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
        print("exit - –í—ã–π—Ç–∏ –∏–∑ –ª–∞—É–Ω—á–µ—Ä–∞")
        
    elif a == "version":
        print(colored(f"–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è –ª–∞—É–Ω—á–µ—Ä–∞: {CURRENT_VERSION}", "cyan"))
        
    elif a == "update":
        update_url = check_for_updates()
        if update_url:
            choice = input(colored("–•–æ—Ç–∏—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–≥—Ä—É–∑–∫–∏? (y/n): ", "yellow")).lower()
            if choice == 'y':
                webbrowser.open(update_url)
        
    elif a == "exit":
        print(colored("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!", "magenta"))
        break
        
    else:
        print(colored("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í–≤–µ–¥–∏—Ç–µ 'help' –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥", "red"))